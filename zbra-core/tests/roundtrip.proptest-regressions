# Seeds for failure cases proptest has generated in the past. It is
# automatically read and these particular cases re-run before any
# novel cases are generated.
#
# It is recommended to check this file in to source control so that
# everyone who runs the test benefits from these saved cases.
cc b84d727da095dc46ebbd4406681cad2ac687bf50b1ca44c002ba79271014a91b # shrinks to (schema, logical_table) = (Map { default: Allow, key: Enum { default: Allow, variants: [VariantSchema { name: "id", tag: 0, schema: Enum { default: Allow, variants: [VariantSchema { name: "id", tag: 0, schema: Int { default: Allow, encoding: Int(Date) } }] } }] }, value: Enum { default: Allow, variants: [VariantSchema { name: "data", tag: 9, schema: Binary { default: Deny, encoding: Binary(Binary) } }, VariantSchema { name: "data", tag: 9, schema: Reversed { inner: Unit } }, VariantSchema { name: "value", tag: 4, schema: Enum { default: Deny, variants: [VariantSchema { name: "w8", tag: 6, schema: Int { default: Deny, encoding: Binary(Utf8) } }, VariantSchema { name: "value", tag: 4, schema: Double { default: Deny } }, VariantSchema { name: "timestamp", tag: 0, schema: Int { default: Allow, encoding: Int(TimeMicroseconds) } }] } }] } }, Map([(Enum { tag: 0, value: Enum { tag: 0, value: Int(0) } }, Enum { tag: 9, value: Binary([80, 11, 205, 194, 225, 14, 118, 178, 76, 236, 102, 251, 24, 162, 119, 205, 0, 113, 184, 171, 56, 206, 120, 46, 182, 247, 134, 48, 62, 236, 162, 104, 219, 19, 110, 149, 181, 249, 22, 110, 55, 218, 109, 205, 35, 26]) }), (Enum { tag: 0, value: Enum { tag: 0, value: Int(-4619820867686577554) } }, Enum { tag: 9, value: Binary([63, 195, 245, 23, 68, 143, 81, 13, 32]) })]))
cc db9ca5d5cdb7d9e9aac7d9984afc3c8ea159a3a48d2a5ebf5641a53a37df6e46 # shrinks to schema = Struct { default: Allow, fields: [] }, values = [Struct([])]
cc 2a22ecdc52c87eb1d38e31389564e5ca4fb6bd50357d0fdc8188b38268b0bc71 # shrinks to boundary_value = Double(NaN)
cc a2a8036b45a5aa35235e36bca9c870cdc06dc407d47acd508e6c0180669765b9 # shrinks to (schema, value) = (Reversed { inner: Struct { default: Allow, fields: [FieldSchema { name: "id", schema: Unit }, FieldSchema { name: "id", schema: Unit }] } }, Reversed(Struct([Field { name: "id", value: Unit }])))
cc dfc764bfeead4aa99458a9c5e9c7f8b1a0a43507f776555c158c92d5318b9f45 # shrinks to schema = Reversed { inner: Int { default: Allow, encoding: Int(Int) } }, values = [Reversed(Int(0))]
cc c64a96769fe44d594ba9a8573d536cf16d23d88dcf6f9c65ad0ee8854aff9a57 # shrinks to (schema, logical_table) = (Map { default: Allow, key: Nested { table: Map { default: Allow, key: Unit, value: Nested { table: Binary { default: Allow, encoding: Binary(Utf8) } } } }, value: Struct { default: Allow, fields: [FieldSchema { name: "e93o_2_p75__e1__662h__k_rjgd", schema: Reversed { inner: Int { default: Deny, encoding: Int(TimeSeconds) } } }, FieldSchema { name: "timestamp", schema: Array { default: Allow, element: Binary { default: Allow, encoding: Int(TimeMicroseconds) } } }, FieldSchema { name: "name", schema: Reversed { inner: Unit } }] } }, Map([(Nested(Map([])), Struct([Field { name: "e93o_2_p75__e1__662h__k_rjgd", value: Reversed(Int(0)) }]))]))
cc 9cff240bab657bf3a2feb244503acdb6582d8492cce3841043c4d3e9bfdcd9d8 # shrinks to (schema, table) = (Array { default: Allow, element: Nested { table: Array { default: Allow, element: Struct { default: Allow, fields: [FieldSchema { name: "id", schema: Unit }, FieldSchema { name: "id", schema: Unit }] } } } }, Array([Nested(Array([Struct([Field { name: "id", value: Unit }])]))]))
cc 5009d802ded33210e06714d1b91543e4c9a61034dde9d1fc80bb2dad87279377 # shrinks to (schema, values) = (Nested { table: Map { default: Allow, key: Struct { default: Allow, fields: [FieldSchema { name: "id", schema: Unit }] }, value: Nested { table: Binary { default: Deny, encoding: Int(TimeMilliseconds) } } } }, [Nested(Map([(Struct([Field { name: "id", value: Unit }]), Nested(Binary([133, 55, 47, 100, 11, 24, 200, 199, 92, 109, 192, 136, 17, 31, 169, 232, 199, 179, 136, 193, 177, 159, 60, 201, 109, 100, 178, 115, 233, 144, 154])))]))])
cc 6575ef9067ace1a8797f3fbe5e641718a885392832a0c6c4d8c8dfea3c884607 # shrinks to (schema, value) = (Struct { default: Allow, fields: [FieldSchema { name: "id", schema: Int { default: Allow, encoding: Int(Date) } }] }, Struct([Field { name: "id", value: Int(4102444800001) }]))
cc 8a315a8f119e752b05d90756c91494011d4baf61a07e454cbde634e91d30af91 # shrinks to (schema, table) = (Array { default: Allow, element: Enum { default: Allow, variants: [VariantSchema { name: "id", tag: 0, schema: Reversed { inner: Int { default: Allow, encoding: Int(Date) } } }] } }, Array([Enum { tag: 0, value: Reversed(Int(-1)) }]))
